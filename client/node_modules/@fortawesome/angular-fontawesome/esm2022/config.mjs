import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class FaConfig {
    constructor() {
        /**
         * Default prefix to use, when one is not provided with the icon name.
         *
         * @default 'fas'
         */
        this.defaultPrefix = 'fas';
        /**
         * Provides a fallback icon to use whilst main icon is being loaded asynchronously.
         * When value is null, then fa-icon component will throw an error if icon input is missing.
         * When value is not null, then the provided icon will be used as a fallback icon if icon input is missing.
         *
         * @default null
         */
        this.fallbackIcon = null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: FaConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: FaConfig, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.0", ngImport: i0, type: FaConfig, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJM0MsTUFBTSxPQUFPLFFBQVE7SUFEckI7UUFFRTs7OztXQUlHO1FBQ0gsa0JBQWEsR0FBZSxLQUFLLENBQUM7UUFFbEM7Ozs7OztXQU1HO1FBQ0gsaUJBQVksR0FBbUIsSUFBSSxDQUFDO0tBU3JDOzhHQXhCWSxRQUFRO2tIQUFSLFFBQVEsY0FESyxNQUFNOzsyRkFDbkIsUUFBUTtrQkFEcEIsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGVmaW5pdGlvbiwgSWNvblByZWZpeCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1zdmctY29yZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgRmFDb25maWcge1xuICAvKipcbiAgICogRGVmYXVsdCBwcmVmaXggdG8gdXNlLCB3aGVuIG9uZSBpcyBub3QgcHJvdmlkZWQgd2l0aCB0aGUgaWNvbiBuYW1lLlxuICAgKlxuICAgKiBAZGVmYXVsdCAnZmFzJ1xuICAgKi9cbiAgZGVmYXVsdFByZWZpeDogSWNvblByZWZpeCA9ICdmYXMnO1xuXG4gIC8qKlxuICAgKiBQcm92aWRlcyBhIGZhbGxiYWNrIGljb24gdG8gdXNlIHdoaWxzdCBtYWluIGljb24gaXMgYmVpbmcgbG9hZGVkIGFzeW5jaHJvbm91c2x5LlxuICAgKiBXaGVuIHZhbHVlIGlzIG51bGwsIHRoZW4gZmEtaWNvbiBjb21wb25lbnQgd2lsbCB0aHJvdyBhbiBlcnJvciBpZiBpY29uIGlucHV0IGlzIG1pc3NpbmcuXG4gICAqIFdoZW4gdmFsdWUgaXMgbm90IG51bGwsIHRoZW4gdGhlIHByb3ZpZGVkIGljb24gd2lsbCBiZSB1c2VkIGFzIGEgZmFsbGJhY2sgaWNvbiBpZiBpY29uIGlucHV0IGlzIG1pc3NpbmcuXG4gICAqXG4gICAqIEBkZWZhdWx0IG51bGxcbiAgICovXG4gIGZhbGxiYWNrSWNvbjogSWNvbkRlZmluaXRpb24gPSBudWxsO1xuXG4gIC8qKlxuICAgKiBTZXQgaWNvbnMgdG8gdGhlIHNhbWUgZml4ZWQgd2lkdGguXG4gICAqXG4gICAqIEBzZWUge0BsaW5rOiBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9ob3ctdG8tdXNlL29uLXRoZS13ZWIvc3R5bGluZy9maXhlZC13aWR0aC1pY29uc31cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGZpeGVkV2lkdGg/OiBib29sZWFuO1xufVxuIl19